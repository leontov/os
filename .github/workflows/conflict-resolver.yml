name: Kolibri Conflict Resolver

on:
  pull_request_target:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  resolve:
    if: github.event_name != 'pull_request_target' || github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest ruff pyright
      - name: Configure git
        run: |
          git config user.name "kolibri-codexgpt"
          git config user.email "kolibri-bot@example.com"
          git config rerere.enabled true
      - name: Run conflict resolver
        id: run_conflict_resolver
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          set -euo pipefail
          BASE="${BASE_REF:-origin/main}"
          if [[ "$BASE" != origin/* ]]; then
            BASE="origin/$BASE"
          fi
          HEAD="${HEAD_REF:-work}"
          BASE_NAME="${BASE#origin/}"
          git fetch origin "$BASE_NAME":"$BASE_NAME"
          git fetch origin "$HEAD:$HEAD"
          python scripts/resolve_conflicts.py --base "$BASE" --head "$HEAD" --report conflict-report.json
      - name: Run bootstrap checks
        id: bootstrap
        run: |
          bash scripts/ci_bootstrap.sh
          pyright
          ruff check .
          pytest -q
      - name: Upload conflict report
        uses: actions/upload-artifact@v4
        with:
          name: conflict-report
          path: conflict-report.json
      - name: Push changes
        if: ${{ success() && steps.run_conflict_resolver.outcome == 'success' }}
        run: |
          if git diff --stat --exit-code; then
            echo "No changes to push"
          else
            branch="codexgpt/autofix-${GITHUB_RUN_ID}"
            git checkout -b "$branch"
            git commit -am "[autofix conflicts] apply automated conflict resolution"
            git push origin "$branch"
          fi
